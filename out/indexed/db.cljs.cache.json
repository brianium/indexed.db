["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",["~$get","~$key","~$update","~$count"]],"~:name","~$indexed.db","~:imports",null,"~:requires",["^ ","~$db.spec","~$indexed.db.spec","~$impl","~$indexed.db.impl.protocols","^>","^>","~$key-range","~$indexed.db.impl.key-range","~$request","~$indexed.db.impl.request","^D","^D","~$store","~$indexed.db.impl.store","^F","^F","~$events","~$indexed.db.impl.events","^H","^H","^B","^B","~$cursor","~$indexed.db.impl.cursor","~$transaction","~$indexed.db.impl.transaction","~$s","~$cljs.spec.alpha","~$indexed.db.impl.database","^N","^L","^L","~$factory","~$indexed.db.impl.factory","^@","^@","^M","^M","^P","^P","~$database","^N","^J","^J"],"~:cljs.spec/speced-vars",["~$indexed.db/open-key-cursor","~$indexed.db/auto-locale?","~$indexed.db/continue","~$indexed.db/multi-entry?","~$indexed.db/clear","~$indexed.db/old-version","~$indexed.db/delete-index","~$indexed.db/open-cursor","~$indexed.db/on","~$indexed.db/create-transaction","~$indexed.db/create-object-store","~$indexed.db/store?","~$indexed.db/delete-object-store","~$indexed.db/lower-open?","~$indexed.db/object-store","~$indexed.db/only","~$indexed.db/off","~$indexed.db/create-cursor-with-value","~$indexed.db/result","~$indexed.db/new-version","~$indexed.db/count","~$indexed.db/ready-state","~$indexed.db/create-database","~$indexed.db/database?","~$indexed.db/get-key","~$indexed.db/index","~$indexed.db/locale","~$indexed.db/includes","~$indexed.db/databases","~$indexed.db/cmp","~$indexed.db/transaction","~$indexed.db/open","~$indexed.db/version","~$indexed.db/get-all-keys","~$indexed.db/update","~$indexed.db/upper-open?","~$indexed.db/event-target?","~$indexed.db/key-path","~$indexed.db/upper","~$indexed.db/index?","~$indexed.db/delete","~$indexed.db/advance","~$indexed.db/direction","~$indexed.db/transaction?","~$indexed.db/delete-database","~$indexed.db/add","~$indexed.db/primary-key","~$indexed.db/close","~$indexed.db/abort","~$indexed.db/get","~$indexed.db/get-database","~$indexed.db/lower","~$indexed.db/create-factory","~$indexed.db/cursor-with-value?","~$indexed.db/get-all","~$indexed.db/durability","~$indexed.db/version-change-event?","~$indexed.db/db","~$indexed.db/factory?","~$indexed.db/create-request","~$indexed.db/object-store-names","~$indexed.db/key","~$indexed.db/lower-bound","~$indexed.db/get-request","~$indexed.db/get-object-store","~$indexed.db/commit","~$indexed.db/error","~$indexed.db/auto-increment?","~$indexed.db/continue-primary-key","~$indexed.db/create-index","~$indexed.db/upper-bound","~$indexed.db/put","~$indexed.db/cursor?","~$indexed.db/value","~$indexed.db/request?","~$indexed.db/bound","~$indexed.db/create-cursor","~$indexed.db/get-transaction","~$indexed.db/index-names","~$indexed.db/create-version-change-event","~$indexed.db/mode","~$indexed.db/source"],"~:uses",null,"~:defs",["^ ","~$request?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/brian/projects/indexed.db/src/indexed/db.cljs","~:line",348,"~:column",7,"~:end-line",348,"~:end-column",15,"~:arglists",["~#list",["~$quote",["^2X",[["~$x"]]]]],"~:doc","Returns true if the given value satisfies the IDBRequest protocol"],"^9","^2E","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",15,"~:method-params",["^2X",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^2X",[null,null]],"^2T",1,"~:variadic?",false,"^2S",348,"~:ret-tag","~$boolean","^2U",348,"~:max-fixed-arity",1,"~:fn-var",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBRequest protocol"],"~$cursor?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",221,"^2T",7,"^2U",221,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBCursor protocol"],"^9","^2C","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",221,"^33","^34","^2U",221,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBCursor protocol"],"~$version",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",193,"^2T",7,"^2U",193,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["~$db"]]]]],"^2Z","Returns an integer version of the connected database"],"^9","^1G","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^2[",["^2X",[["^39"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",193,"^33","~$any","^2U",193,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^39"]]]]],"^2Z","Returns an integer version of the connected database"],"~$put",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",961,"^2T",7,"^2U",961,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["^E","~$item"],["^E","^3<","~$k"]]]]],"^2Z","Updates a given record in a database, or inserts a new record if the given item does not already exist","~:top-fn",["^ ","^32",false,"~:fixed-arity",3,"^35",3,"^2[",[["^E","^3<"],["^E","^3<","~$k"]],"^2W",["^2X",[["^E","^3<"],["^E","^3<","~$k"]]],"^31",["^2X",[null,null]]]],"^9","^2B","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^E","^3<"],["^E","^3<","~$k"]],"^2W",["^2X",[["^E","^3<"],["^E","^3<","~$k"]]],"^31",["^2X",[null,null]]],"^2[",[["^E","^3<"],["^E","^3<","~$k"]],"^30",null,"^3>",3,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"~:methods",[["^ ","^3>",2,"^32",false,"~:tag","^3:"],["^ ","^3>",3,"^32",false,"^3@","^3:"]],"^2S",961,"^2U",961,"^35",3,"^36",true,"^2W",["^2X",[["^E","^3<"],["^E","^3<","~$k"]]],"^2Z","Updates a given record in a database, or inserts a new record if the given item does not already exist"],"~$delete-database",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",71,"^2T",7,"^2U",71,"^2V",22,"^2W",["^2X",["^2Y",["^2X",[["^O","~$name"],["^3B"]]]]],"^2Z","Request the deletion of a database by name.\n   \n   Returns an IDBRequest","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^O","^3B"],["^3B"]],"^2W",["^2X",[["^O","^3B"],["^3B"]]],"^31",["^2X",[null,null]]]],"^9","^1S","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",22,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^O","^3B"],["^3B"]],"^2W",["^2X",[["^O","^3B"],["^3B"]]],"^31",["^2X",[null,null]]],"^2[",[["^O","^3B"],["^3B"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",71,"^2U",71,"^35",2,"^36",true,"^2W",["^2X",[["^O","^3B"],["^3B"]]],"^2Z","Request the deletion of a database by name.\n   \n   Returns an IDBRequest"],"~$add",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",896,"^2T",7,"^2U",896,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["^E","~$value","~$k"],["^E","^3D"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, creates a\n   structured clone of the value, and stores the cloned value in the object store.\n   \n   This is for adding new records to an object store.\n   \n   If k is unspecified, it results to null","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^E","^3D","~$k"],["^E","^3D"]],"^2W",["^2X",[["^E","^3D","~$k"],["^E","^3D"]]],"^31",["^2X",[null,null]]]],"^9","^1T","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^E","^3D","~$k"],["^E","^3D"]],"^2W",["^2X",[["^E","^3D","~$k"],["^E","^3D"]]],"^31",["^2X",[null,null]]],"^2[",[["^E","^3D","~$k"],["^E","^3D"]],"^30",null,"^3>",3,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"]],"^2S",896,"^2U",896,"^35",3,"^36",true,"^2W",["^2X",[["^E","^3D","~$k"],["^E","^3D"]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, creates a\n   structured clone of the value, and stores the cloned value in the object store.\n   \n   This is for adding new records to an object store.\n   \n   If k is unspecified, it results to null"],"~$get-key",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",710,"^2T",7,"^2U",710,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["~$store-or-index","~$k"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, finds either the primary key\n   that corresponds to the given key in this index (or object store) or the first corresponding primary key, if key is set to an IDBKeyRange.\n   \n   If a primary key is found, it is set as the result of the request object. Note that this doesn't return the whole record as get does."],"^9","^1?","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^2[",["^2X",[["^3F","~$k"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",710,"^33","^3:","^2U",710,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3F","~$k"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, finds either the primary key\n   that corresponds to the given key in this index (or object store) or the first corresponding primary key, if key is set to an IDBKeyRange.\n   \n   If a primary key is found, it is set as the result of the request object. Note that this doesn't return the whole record as get does."],"~$get-transaction",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",623,"^2T",7,"^2U",623,"^2V",22,"^2W",["^2X",["^2Y",["^2X",[["~$belongs-to-txn"]]]]],"^2Z","Return the IDBTransaction that `belongs-to-txn` belongs to. This is presumably\n   an IDBRequest or IDBObjectStore implementation"],"^9","^2H","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",22,"^2[",["^2X",[["^3H"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",623,"^33","~$indexed.db.impl.transaction/Transaction","^2U",623,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3H"]]]]],"^2Z","Return the IDBTransaction that `belongs-to-txn` belongs to. This is presumably\n   an IDBRequest or IDBObjectStore implementation"],"~$key-path",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",674,"^2T",7,"^2U",674,"^2V",15,"^2W",["^2X",["^2Y",["^2X",[["^3F"]]]]],"^2Z","Returns the key path of this object store"],"^9","^1L","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",15,"^2[",["^2X",[["^3F"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",674,"^33","^3:","^2U",674,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3F"]]]]],"^2Z","Returns the key path of this object store"],"~$upper-open?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",538,"^2T",7,"^2U",538,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns false if the upper-bound value is included in the key range"],"^9","^1J","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^A"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",538,"^33","^3:","^2U",538,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns false if the upper-bound value is included in the key range"],"~$primary-key",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",259,"^2T",7,"^2U",259,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Interface returns the cursor's current effective key. If the cursor is currently being iterated\n   or has iterated outside its range, this is set to undefined. "],"^9","^1U","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^I"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",259,"^33","^3:","^2U",259,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Interface returns the cursor's current effective key. If the cursor is currently being iterated\n   or has iterated outside its range, this is set to undefined. "],"~$direction",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",240,"^2T",7,"^2U",240,"^2V",16,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Returns the direction of traversal of the cursor. See [[indexed.db/open-cursor]]\n   for an explanation of possible direction values"],"^9","^1Q","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",16,"^2[",["^2X",[["^I"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",240,"^33","^3:","^2U",240,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Returns the direction of traversal of the cursor. See [[indexed.db/open-cursor]]\n   for an explanation of possible direction values"],"~$index?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",808,"^2T",7,"^2U",808,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBIndex protocol"],"^9","^1N","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",808,"^33","^34","^2U",808,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBIndex protocol"],"~$auto-locale?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",817,"^2T",7,"^2U",817,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["~$index"]]]]],"^2Z","Returns a boolean value indicating whether the index had a locale value of auto specified upon its creation.\n   \n   This property is [experimental](https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental)"],"^9","^T","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^2[",["^2X",[["^3P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",817,"^33","^3:","^2U",817,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns a boolean value indicating whether the index had a locale value of auto specified upon its creation.\n   \n   This property is [experimental](https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental)"],"~$clear",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",913,"^2T",7,"^2U",913,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Creates and immediately returns an IDBRequest, and clears this object store in a separate thread.\n   \n   This is for deleting all the current data out of an object store"],"^9","^W","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^E"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",913,"^33","^3:","^2U",913,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Creates and immediately returns an IDBRequest, and clears this object store in a separate thread.\n   \n   This is for deleting all the current data out of an object store"],"~$open",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",36,"^2T",7,"^2U",36,"^2V",11,"^2W",["^2X",["^2Y",["^2X",[["^O","^3B","^38"],["^3B","^38"],["^3B"]]]]],"^2Z","Return an IDBRequest whose result is a native IDBDatabase object.\n   \n   The version value is optional.\n   \n   If the version is not provided and the database exists, then a connection\n   to the database will be opened without changing its version.\n   \n   If the version is not provided and the database does not exist,\n   then it will be created with version `1`\n   \n   The indexed.db library makes no assumptions about how consumers want to handle\n   events. In order to use the indexed.db API with the result of an open reqest, it\n   will need to be converted to an implementation of the IDBDatabase protocol:\n   \n   ```clojure\n   (let [open-request (db/open \"my-db\")]\n     (-> open-request\n         (db/on \"upgradeneeded\" handle-upgrade)\n         (db/on \"success\" #(db/create-database\n                               (db/result open-request)))))\n   ```","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^O","^3B","^38"],["^3B","^38"],["^3B"]],"^2W",["^2X",[["^O","^3B","^38"],["^3B","^38"],["^3B"]]],"^31",["^2X",[null,null,null]]]],"^9","^1F","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",11,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^O","^3B","^38"],["^3B","^38"],["^3B"]],"^2W",["^2X",[["^O","^3B","^38"],["^3B","^38"],["^3B"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^O","^3B","^38"],["^3B","^38"],["^3B"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",36,"^2U",36,"^35",3,"^36",true,"^2W",["^2X",[["^O","^3B","^38"],["^3B","^38"],["^3B"]]],"^2Z","Return an IDBRequest whose result is a native IDBDatabase object.\n   \n   The version value is optional.\n   \n   If the version is not provided and the database exists, then a connection\n   to the database will be opened without changing its version.\n   \n   If the version is not provided and the database does not exist,\n   then it will be created with version `1`\n   \n   The indexed.db library makes no assumptions about how consumers want to handle\n   events. In order to use the indexed.db API with the result of an open reqest, it\n   will need to be converted to an implementation of the IDBDatabase protocol:\n   \n   ```clojure\n   (let [open-request (db/open \"my-db\")]\n     (-> open-request\n         (db/on \"upgradeneeded\" handle-upgrade)\n         (db/on \"success\" #(db/create-database\n                               (db/result open-request)))))\n   ```"],"~$transaction?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",604,"^2T",7,"^2U",604,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBTransaction protocol"],"^9","^1R","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",604,"^33","^34","^2U",604,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBTransaction protocol"],"~$factory?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",17,"^2T",7,"^2U",17,"^2V",15,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBFactory protocol"],"^9","^25","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",15,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",17,"^33","^34","^2U",17,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBFactory protocol"],"~$create-request",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",357,"^2T",7,"^2U",357,"^2V",21,"^2W",["^2X",["^2Y",["^2X",[["~$js-request"]]]]],"^2Z","A factory function for creating an implementation of the IDBRequest protocol\n   from a native js/IDBRequest"],"^9","^26","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",21,"^2[",["^2X",[["^3V"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",357,"^33","~$indexed.db.impl.request/Request","^2U",357,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3V"]]]]],"^2Z","A factory function for creating an implementation of the IDBRequest protocol\n   from a native js/IDBRequest"],"~$object-store-names",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",182,"^2T",7,"^2U",182,"^2V",25,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns a sequence of object store names from the given database or transaction"],"^9","^27","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",25,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",182,"^33","^3:","^2U",182,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns a sequence of object store names from the given database or transaction"],"~$advance",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",269,"^2T",7,"^2U",269,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["^I","^8"]]]]],"^2Z","Sets the number of times a cursor should move its position forward"],"^9","^1P","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^2[",["^2X",[["^I","^8"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",269,"^33","^3:","^2U",269,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I","^8"]]]]],"^2Z","Sets the number of times a cursor should move its position forward"],"~$version-change-event?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",397,"^2T",7,"^2U",397,"^2V",28,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBVersionChangeEvent protocol"],"^9","^23","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",28,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",397,"^33","^34","^2U",397,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBVersionChangeEvent protocol"],"~$upper",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",520,"^2T",7,"^2U",520,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns the upper bound of the key range"],"^9","^1M","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^A"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",520,"^33","^3:","^2U",520,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns the upper bound of the key range"],"~$create-transaction",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",613,"^2T",7,"^2U",613,"^2V",25,"^2W",["^2X",["^2Y",["^2X",[["~$js-idb-transaction"]]]]],"^2Z","A factory function for creating an implementation of the IDBTransaction protocol\n   from a native js/IDBTransaction"],"^9","^10","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",25,"^2[",["^2X",[["^41"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",613,"^33","^3I","^2U",613,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^41"]]]]],"^2Z","A factory function for creating an implementation of the IDBTransaction protocol\n   from a native js/IDBTransaction"],"~$ready-state",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",386,"^2T",7,"^2U",386,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["~$db-request"]]]]],"^2Z","Returns the state of the request"],"^9","^1<","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^43"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",386,"^33","^3:","^2U",386,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^43"]]]]],"^2Z","Returns the state of the request"],"^5",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",698,"^2T",7,"^2U",698,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["^3F","~$k"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, finds either the value in the referenced\n   object store or index that corresponds to the given key or the first corresponding value, if key is set to an IDBKeyRange.\n   \n   If a value is successfully found, then a structured clone of it is created and set as the result of the request"],"^9","^1X","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^2[",["^2X",[["^3F","~$k"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",698,"^33","^3:","^2U",698,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3F","~$k"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, finds either the value in the referenced\n   object store or index that corresponds to the given key or the first corresponding value, if key is set to an IDBKeyRange.\n   \n   If a value is successfully found, then a structured clone of it is created and set as the result of the request"],"~$create-cursor-with-value",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",327,"^2T",7,"^2U",327,"^2V",31,"^2W",["^2X",["^2Y",["^2X",[["~$js-cursor-with-value"]]]]],"^2Z","A factory function for creating an implementation of the IDBCursorWithValue protocol\n   from a native js/IDBCursorWithValue"],"^9","^18","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",31,"^2[",["^2X",[["^45"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",327,"^33","~$indexed.db.impl.cursor/CursorWithValue","^2U",327,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^45"]]]]],"^2Z","A factory function for creating an implementation of the IDBCursorWithValue protocol\n   from a native js/IDBCursorWithValue"],"~$only",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",565,"^2T",7,"^2U",565,"^2V",11,"^2W",["^2X",["^2Y",["^2X",[["^3D"]]]]],"^2Z","Creates a new key range containing a single value"],"^9","^16","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",11,"^2[",["^2X",[["^3D"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",565,"^33","~$indexed.db.impl.key-range/KeyRange","^2U",565,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3D"]]]]],"^2Z","Creates a new key range containing a single value"],"^6",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",250,"^2T",7,"^2U",250,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Returns the key for the record at the cursor's position"],"^9","^28","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^2[",["^2X",[["^I"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",250,"^33","^3:","^2U",250,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I"]]]]],"^2Z","Returns the key for the record at the cursor's position"],"~$old-version",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",438,"^2T",7,"^2U",438,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["~$version-change-event"]]]]],"^2Z","Returns the old version number of the database"],"^9","^X","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^4:"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",438,"^33","^3:","^2U",438,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4:"]]]]],"^2Z","Returns the old version number of the database"],"^3P",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",951,"^2T",7,"^2U",951,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^E","~$index-name"]]]]],"^2Z","Opens a named index in the current object store, after which it can be used to, for example,\n   return a series of records sorted by that index using a cursor"],"^9","^1@","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^E","^4;"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",951,"^33","^3:","^2U",951,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^E","^4;"]]]]],"^2Z","Opens a named index in the current object store, after which it can be used to, for example,\n   return a series of records sorted by that index using a cursor"],"~$multi-entry?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",848,"^2T",7,"^2U",848,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns a boolean value that affects how the index behaves when the result of evaluating the index's\n   key path yields an array"],"^9","^V","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^2[",["^2X",[["^3P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",848,"^33","^3:","^2U",848,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns a boolean value that affects how the index behaves when the result of evaluating the index's\n   key path yields an array"],"~$database?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",120,"^2T",7,"^2U",120,"^2V",16,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBDatabase protocol"],"^9","^1>","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",16,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",120,"^33","^34","^2U",120,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBDatabase protocol"],"~$key-range?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",497,"^2T",7,"^2U",497,"^2V",17,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBKeyRange protocol"],"^9","~$indexed.db/key-range?","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",17,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",497,"^33","^34","^2U",497,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBKeyRange protocol"],"~$create-database",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",148,"^2T",7,"^2U",148,"^2V",22,"^2W",["^2X",["^2Y",["^2X",[["~$js-idb"]]]]],"^2Z","A factory function for creating an implementation of the IDBDatabase protocol\n   from a native js/IDBDatabase"],"^9","^1=","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",22,"^2[",["^2X",[["^4A"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",148,"^33","~$indexed.db.impl.database/Database","^2U",148,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4A"]]]]],"^2Z","A factory function for creating an implementation of the IDBDatabase protocol\n   from a native js/IDBDatabase"],"^39",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",129,"^2T",7,"^2U",129,"^2V",9,"^2W",["^2X",["^2Y",["^2X",[["~$belongs-to-database"]]]]],"^2Z","Returns an implementation of the IDBDatabase protocol that is associated\n   with `belongs-to-database` (presumably an IDBTransaction implementation)"],"^9","^24","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",9,"^2[",["^2X",[["^4C"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",129,"^33","^4B","^2U",129,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4C"]]]]],"^2Z","Returns an implementation of the IDBDatabase protocol that is associated\n   with `belongs-to-database` (presumably an IDBTransaction implementation)"],"~$cmp",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",85,"^2T",7,"^2U",85,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["^O","~$a","~$b"],["~$a","~$b"]]]]],"^2Z","Compares two values as keys to determine equality and ordering for IndexedDB operations,\n   such as storing and iterating.\n   \n   | returned value | description                          |\n   |:---------------|-------------------------------------:|\n   | -1             | 1st key is less than the 2nd key     |\n   | 0              | 1st key is equal to the 2nd key      |\n   | 1              | 1st key is greater than the 2nd key  |","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^O","~$a","~$b"],["~$a","~$b"]],"^2W",["^2X",[["^O","~$a","~$b"],["~$a","~$b"]]],"^31",["^2X",[null,null]]]],"^9","^1D","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^O","~$a","~$b"],["~$a","~$b"]],"^2W",["^2X",[["^O","~$a","~$b"],["~$a","~$b"]]],"^31",["^2X",[null,null]]],"^2[",[["^O","~$a","~$b"],["~$a","~$b"]],"^30",null,"^3>",3,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"]],"^2S",85,"^2U",85,"^35",3,"^36",true,"^2W",["^2X",[["^O","~$a","~$b"],["~$a","~$b"]]],"^2Z","Compares two values as keys to determine equality and ordering for IndexedDB operations,\n   such as storing and iterating.\n   \n   | returned value | description                          |\n   |:---------------|-------------------------------------:|\n   | -1             | 1st key is less than the 2nd key     |\n   | 0              | 1st key is equal to the 2nd key      |\n   | 1              | 1st key is greater than the 2nd key  |"],"~$continue",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",278,"^2T",7,"^2U",278,"^2V",15,"^2W",["^2X",["^2Y",["^2X",[["^I","~$k"],["^I"]]]]],"^2Z","Advances the cursor to the next position along its direction, to the item whose key matches\n   the optional key parameter","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^I","~$k"],["^I"]],"^2W",["^2X",[["^I","~$k"],["^I"]]],"^31",["^2X",[null,null]]]],"^9","^U","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",15,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^I","~$k"],["^I"]],"^2W",["^2X",[["^I","~$k"],["^I"]]],"^31",["^2X",[null,null]]],"^2[",[["^I","~$k"],["^I"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",278,"^2U",278,"^35",2,"^36",true,"^2W",["^2X",[["^I","~$k"],["^I"]]],"^2Z","Advances the cursor to the next position along its direction, to the item whose key matches\n   the optional key parameter"],"~$locale",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",828,"^2T",7,"^2U",828,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns the locale of the index (for example en-US, or pl) if it had a locale value specified upon its creation.\n   \n   This property is [experimental](https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental)"],"^9","^1A","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["^3P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",828,"^33","^3:","^2U",828,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns the locale of the index (for example en-US, or pl) if it had a locale value specified upon its creation.\n   \n   This property is [experimental](https://developer.mozilla.org/en-US/docs/MDN/Guidelines/Conventions_definitions#experimental)"],"~$open-key-cursor",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",787,"^2T",7,"^2U",787,"^2V",22,"^2W",["^2X",["^2Y",["^2X",[["^3F","~$query","^3M"],["^3F","^4H"],["^3F"]]]]],"^2Z","Returns an IDBRequest, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index.\n   \n   The method sets the position of the cursor to the appropriate key, based on the specified direction.\n   \n   If the key range is not specified or is null, then the range includes all the keys.\n   \n   See [[indexed.db/open-cursor]] for an explanation of direction.","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]]],"^9","^S","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",22,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",787,"^2U",787,"^35",3,"^36",true,"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^2Z","Returns an IDBRequest, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index.\n   \n   The method sets the position of the cursor to the appropriate key, based on the specified direction.\n   \n   If the key range is not specified or is null, then the range includes all the keys.\n   \n   See [[indexed.db/open-cursor]] for an explanation of direction."],"~$lower-bound",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",574,"^2T",7,"^2U",574,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["~$lower","~$open?"],["^4J"]]]]],"^2Z","Creates a new key range with only a lower bound.\n   \n   By default, it includes the lower endpoint value and is closed","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^4J","^4K"],["^4J"]],"^2W",["^2X",[["^4J","^4K"],["^4J"]]],"^31",["^2X",[null,null]]]],"^9","^29","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^4J","^4K"],["^4J"]],"^2W",["^2X",[["^4J","^4K"],["^4J"]]],"^31",["^2X",[null,null]]],"^2[",[["^4J","^4K"],["^4J"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^48"],["^ ","^3>",1,"^32",false,"^3@","^48"]],"^2S",574,"^2U",574,"^35",2,"^36",true,"^2W",["^2X",[["^4J","^4K"],["^4J"]]],"^2Z","Creates a new key range with only a lower bound.\n   \n   By default, it includes the lower endpoint value and is closed"],"^3D",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",337,"^2T",7,"^2U",337,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["~$cursor-with-value"]]]]],"^2Z","Returns the value of the current cursor, whatever that is"],"^9","^2D","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^4L"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",337,"^33","^3:","^2U",337,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4L"]]]]],"^2Z","Returns the value of the current cursor, whatever that is"],"~$get-all-keys",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",738,"^2T",7,"^2U",738,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]]]],"^2Z","Asynchronously retrieves the primary keys of all objects inside the index or store,\n   setting them as the result of the request","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]]],"^9","^1H","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",738,"^2U",738,"^35",3,"^36",true,"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^2Z","Asynchronously retrieves the primary keys of all objects inside the index or store,\n   setting them as the result of the request"],"~$continue-primary-key",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",291,"^2T",7,"^2U",291,"^2V",27,"^2W",["^2X",["^2Y",["^2X",[["^I","~$k","^3L"]]]]],"^2Z","Advances the cursor to the item whose key matches the key parameter as well as whose primary key\n   matches the primary key parameter.\n   \n   A typical use case, is to resume the iteration where a previous cursor has been closed, without having to compare the keys one by one."],"^9","^2?","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",27,"^2[",["^2X",[["^I","~$k","^3L"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",291,"^33","^3:","^2U",291,"^35",3,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I","~$k","^3L"]]]]],"^2Z","Advances the cursor to the item whose key matches the key parameter as well as whose primary key\n   matches the primary key parameter.\n   \n   A typical use case, is to resume the iteration where a previous cursor has been closed, without having to compare the keys one by one."],"~$mode",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",642,"^2T",7,"^2U",642,"^2V",11,"^2W",["^2X",["^2Y",["^2X",[["~$txn"]]]]],"^2Z","Returns the current mode for accessing the data in the object stores in the scope of the transaction"],"^9","^2K","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",11,"^2[",["^2X",[["^4P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",642,"^33","^3:","^2U",642,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Returns the current mode for accessing the data in the object stores in the scope of the transaction"],"^7",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",303,"^2T",7,"^2U",303,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["^I","^3D"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, updates the value\n   at the current position of the cursor in the object store.\n   \n   If the cursor points to a record that has just been deleted, a new record is created.\n   \n   Be aware that you can't call update (or delete) on cursors obtained from open-key-cursor.\n   For such needs, you have to use open-cursor instead"],"^9","^1I","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["^I","^3D"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",303,"^33","^3:","^2U",303,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^I","^3D"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread, updates the value\n   at the current position of the cursor in the object store.\n   \n   If the cursor points to a record that has just been deleted, a new record is created.\n   \n   Be aware that you can't call update (or delete) on cursors obtained from open-key-cursor.\n   For such needs, you have to use open-cursor instead"],"~$delete",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",973,"^2T",7,"^2U",973,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["^I"],["^E","~$k"]]]]],"^2Z","When given an IDBObjectStore and a key, returns an IDBRequest,\n   and, in a separate thread, deletes the specified record or records.\n   \n   When given a cursor, returns an IDBRequest, and, in a separate thread,\n   deletes the record at the cursor's position, without changing the cursor's position.\n   Once the record is deleted, the cursor's value is set to null","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^I"],["^E","~$k"]],"^2W",["^2X",[["^I"],["^E","~$k"]]],"^31",["^2X",[null,null]]]],"^9","^1O","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^I"],["^E","~$k"]],"^2W",["^2X",[["^I"],["^E","~$k"]]],"^31",["^2X",[null,null]]],"^2[",[["^I"],["^E","~$k"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",1,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"]],"^2S",973,"^2U",973,"^35",2,"^36",true,"^2W",["^2X",[["^I"],["^E","~$k"]]],"^2Z","When given an IDBObjectStore and a key, returns an IDBRequest,\n   and, in a separate thread, deletes the specified record or records.\n   \n   When given a cursor, returns an IDBRequest, and, in a separate thread,\n   deletes the record at the cursor's position, without changing the cursor's position.\n   Once the record is deleted, the cursor's value is set to null"],"~$create-cursor",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",230,"^2T",7,"^2U",230,"^2V",20,"^2W",["^2X",["^2Y",["^2X",[["~$js-cursor"]]]]],"^2Z","A factory function for creating an implementation of the IDBCursor protocol\n   from a native js/IDBCursor"],"^9","^2G","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",20,"^2[",["^2X",[["^4S"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",230,"^33","~$indexed.db.impl.cursor/Cursor","^2U",230,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4S"]]]]],"^2Z","A factory function for creating an implementation of the IDBCursor protocol\n   from a native js/IDBCursor"],"~$event-target?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",458,"^2T",7,"^2U",458,"^2V",20,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the EventTarget protocol"],"^9","^1K","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",20,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",458,"^33","^34","^2U",458,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the EventTarget protocol"],"~$index-names",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",876,"^2T",7,"^2U",876,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Returns a sequence of the names of indexes on objects in this object store"],"^9","^2I","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^E"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",876,"^33","^3:","^2U",876,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Returns a sequence of the names of indexes on objects in this object store"],"~$databases",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",104,"^2T",7,"^2U",104,"^2V",16,"^2W",["^2X",["^2Y",["^2X",[["^O","~$fn-1"],["^4X"]]]]],"^2Z","Calls the given function with an error or a sequence of all\n   available databases, including their names and versions","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^O","^4X"],["^4X"]],"^2W",["^2X",[["^O","^4X"],["^4X"]]],"^31",["^2X",[null,null]]]],"^9","^1C","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",16,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^O","^4X"],["^4X"]],"^2W",["^2X",[["^O","^4X"],["^4X"]]],"^31",["^2X",[null,null]]],"^2[",[["^O","^4X"],["^4X"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",104,"^2U",104,"^35",2,"^36",true,"^2W",["^2X",[["^O","^4X"],["^4X"]]],"^2Z","Calls the given function with an error or a sequence of all\n   available databases, including their names and versions"],"~$source",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",1023,"^2T",7,"^2U",1023,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","In the case of a cursor, returns the IDBObjectStore or IDBIndex that the cursor is iterating over.\n  \n   In the case of a request, returns the source of the request, such as an index or an object store."],"^9","^2L","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",1023,"^33",["^4",["~$indexed.db.impl.store/ObjectStore","~$indexed.db.impl.store/Index","~$clj-nil"]],"^2U",1023,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","In the case of a cursor, returns the IDBObjectStore or IDBIndex that the cursor is iterating over.\n  \n   In the case of a request, returns the source of the request, such as an index or an object store."],"^K",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",202,"^2T",7,"^2U",202,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^39","~$store-names","^4O","~$options"],["^39","^51","^4O"],["^39","^51"]]]]],"^2Z","Immediately returns an implementation of the IDBTransaction protocol.\n   The IDBTransaction protocol provides functions that can be used to access\n   object stores.","^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]],"^2W",["^2X",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]]],"^31",["^2X",[null,null,null]]]],"^9","^1E","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]],"^2W",["^2X",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]],"^30",null,"^3>",4,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",4,"^32",false,"^3@","^3:"],["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"]],"^2S",202,"^2U",202,"^35",4,"^36",true,"^2W",["^2X",[["^39","^51","^4O","^52"],["^39","^51","^4O"],["^39","^51"]]],"^2Z","Immediately returns an implementation of the IDBTransaction protocol.\n   The IDBTransaction protocol provides functions that can be used to access\n   object stores."],"~$create-version-change-event",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",406,"^2T",7,"^2U",406,"^2V",34,"^2W",["^2X",["^2Y",["^2X",[["~$js-event"]]]]],"^2Z","A factory function for creating an implementation of the IDBVersionChangeEvent protocol\n   from a native js/IDBVersionChangeEvent.\n   \n   Note: Since this library intends to avoid making assumptions on event handling, this\n   type is not provided automatically. You must construct it manually when handling version\n   change events. An example from the test suite:\n   \n   ```clojure\n   (defn handle-upgrade\n     [fn-2]\n     (fn [e]\n       (let [event   (db/create-version-change-event e)\n             request (db/get-request event)]\n               (fn-2 (db/result request) (db/get-transaction request)))))\n   ```"],"^9","^2J","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",34,"^2[",["^2X",[["^54"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",406,"^33","~$indexed.db.impl.events/VersionChangeEvent","^2U",406,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^54"]]]]],"^2Z","A factory function for creating an implementation of the IDBVersionChangeEvent protocol\n   from a native js/IDBVersionChangeEvent.\n   \n   Note: Since this library intends to avoid making assumptions on event handling, this\n   type is not provided automatically. You must construct it manually when handling version\n   change events. An example from the test suite:\n   \n   ```clojure\n   (defn handle-upgrade\n     [fn-2]\n     (fn [e]\n       (let [event   (db/create-version-change-event e)\n             request (db/get-request event)]\n               (fn-2 (db/result request) (db/get-transaction request)))))\n   ```"],"~$includes",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",502,"^2T",7,"^2U",502,"^2V",15,"^2W",["^2X",["^2Y",["^2X",[["^A","~$k"]]]]],"^2Z","Returns a boolean indicating whether a specified key is inside the key range"],"^9","^1B","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",15,"^2[",["^2X",[["^A","~$k"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",502,"^33","^3:","^2U",502,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^A","~$k"]]]]],"^2Z","Returns a boolean indicating whether a specified key is inside the key range"],"~$abort",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",651,"^2T",7,"^2U",651,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Rolls back all the changes to objects in the database associated with this transaction"],"^9","^1W","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^4P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",651,"^33","^3:","^2U",651,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Rolls back all the changes to objects in the database associated with this transaction"],"~$close",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",158,"^2T",7,"^2U",158,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^39"]]]]],"^2Z","Returns immediately and closes the connection in a separate thread.\n   \n   The connection is not actually closed until all transactions created using this\n   connection are complete. No new transactions can be created for this connection\n   once this method is called. Methods that create transactions throw an exception\n   if a closing operation is pending."],"^9","^1V","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^39"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",158,"^33","^3:","^2U",158,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^39"]]]]],"^2Z","Returns immediately and closes the connection in a separate thread.\n   \n   The connection is not actually closed until all transactions created using this\n   connection are complete. No new transactions can be created for this connection\n   once this method is called. Methods that create transactions throw an exception\n   if a closing operation is pending."],"~$create-factory",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",26,"^2T",7,"^2U",26,"^2V",21,"^2W",["^2X",["^2Y",["^2X",[[]]]]],"^2Z","Return an implementation of the IDBFactory protocol backed by\n   the global indexedDB object"],"^9","^1[","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",21,"^2[",["^2X",[[]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",26,"^33","~$indexed.db.impl.factory/Factory","^2U",26,"^35",0,"^36",true,"^2W",["^2X",["^2Y",["^2X",[[]]]]],"^2Z","Return an implementation of the IDBFactory protocol backed by\n   the global indexedDB object"],"~$cursor-with-value?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",318,"^2T",7,"^2U",318,"^2V",25,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBCursorWithValue protocol"],"^9","^20","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",25,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",318,"^33","^34","^2U",318,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBCursorWithValue protocol"],"~$upper-bound",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",588,"^2T",7,"^2U",588,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^3[","^4K"],["^3["]]]]],"^2Z","Creates a new upper-bound key range.\n   \n   By default, it includes the upper endpoint value and is closed","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^3[","^4K"],["^3["]],"^2W",["^2X",[["^3[","^4K"],["^3["]]],"^31",["^2X",[null,null]]]],"^9","^2A","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^3[","^4K"],["^3["]],"^2W",["^2X",[["^3[","^4K"],["^3["]]],"^31",["^2X",[null,null]]],"^2[",[["^3[","^4K"],["^3["]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^48"],["^ ","^3>",1,"^32",false,"^3@","^48"]],"^2S",588,"^2U",588,"^35",2,"^36",true,"^2W",["^2X",[["^3[","^4K"],["^3["]]],"^2Z","Creates a new upper-bound key range.\n   \n   By default, it includes the upper endpoint value and is closed"],"~$get-database",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",139,"^2T",7,"^2U",139,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^4C"]]]]],"^2Z","An alias for the [[indexed.db/db]] function"],"^9","^1Y","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^2[",["^2X",[["^4C"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",139,"^33","^4B","^2U",139,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4C"]]]]],"^2Z","An alias for the [[indexed.db/db]] function"],"~$lower-open?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",529,"^2T",7,"^2U",529,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns false if the lower-bound value is included in the key range"],"^9","^14","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^A"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",529,"^33","^3:","^2U",529,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns false if the lower-bound value is included in the key range"],"~$delete-object-store",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",172,"^2T",7,"^2U",172,"^2V",26,"^2W",["^2X",["^2Y",["^2X",[["^39","^3B"]]]]],"^2Z","Destroys the object store with the given name in the connected database, along with\n   any indexes that reference it."],"^9","^13","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",26,"^2[",["^2X",[["^39","^3B"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",172,"^33","^3:","^2U",172,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^39","^3B"]]]]],"^2Z","Destroys the object store with the given name in the connected database, along with\n   any indexes that reference it."],"~$create-object-store",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",990,"^2T",7,"^2U",990,"^2V",26,"^2W",["^2X",["^2Y",["^2X",[["^39","^3B","^52"],["^39","^3B"],["~$js-idb-store"]]]]],"^2Z","When called with an IDBDatabase, creates and returns a new IDBObjectStore.\n   \n   When called with a single native js/IDBObjectStore, acts as a factory function for\n   wrapping the js/IDBObjectStore in an implementation of the IDBObjectStore protocol","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^39","^3B","^52"],["^39","^3B"],["^5A"]],"^2W",["^2X",[["^39","^3B","^52"],["^39","^3B"],["^5A"]]],"^31",["^2X",[null,null,null]]]],"^9","^11","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",26,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^39","^3B","^52"],["^39","^3B"],["^5A"]],"^2W",["^2X",[["^39","^3B","^52"],["^39","^3B"],["^5A"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^39","^3B","^52"],["^39","^3B"],["^5A"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^4Z"]],"^2S",990,"^2U",990,"^35",3,"^36",true,"^2W",["^2X",[["^39","^3B","^52"],["^39","^3B"],["^5A"]]],"^2Z","When called with an IDBDatabase, creates and returns a new IDBObjectStore.\n   \n   When called with a single native js/IDBObjectStore, acts as a factory function for\n   wrapping the js/IDBObjectStore in an implementation of the IDBObjectStore protocol"],"~$open-cursor",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",754,"^2T",7,"^2U",754,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]]]],"^2Z","Returns an IDBRequest, and, in a separate thread, creates a cursor over the specified key range.\n   \n   The method sets the position of the cursor to the appropriate record, based on the specified direction.\n   \n   If the key range is not specified or is null, then the range includes all the records.\n   \n   The value of direction can be one of \"next\", \"nextunique\", \"prev\", or \"prevunique\".\n   \n   \"next\": The cursor shows all records, including duplicates. It starts at the lower bound of the key range and moves upwards\n   (monotonically increasing in the order of keys).\n   \n   \"nextunique\": The cursor shows all records, excluding duplicates. If multiple records exist with the same key,\n   only the first one iterated is retrieved. It starts at the lower bound of the key range and moves upwards.\n   \n   \"prev\": The cursor shows all records, including duplicates. It starts at the upper bound of the key range and moves\n   downwards (monotonically decreasing in the order of keys).\n   \n   \"prevunique\": The cursor shows all records, excluding duplicates. If multiple records exist with the same key,\n   only the first one iterated is retrieved. It starts at the upper bound of the key range and moves downwards.","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]]],"^9","^Z","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",754,"^2U",754,"^35",3,"^36",true,"^2W",["^2X",[["^3F","^4H","^3M"],["^3F","^4H"],["^3F"]]],"^2Z","Returns an IDBRequest, and, in a separate thread, creates a cursor over the specified key range.\n   \n   The method sets the position of the cursor to the appropriate record, based on the specified direction.\n   \n   If the key range is not specified or is null, then the range includes all the records.\n   \n   The value of direction can be one of \"next\", \"nextunique\", \"prev\", or \"prevunique\".\n   \n   \"next\": The cursor shows all records, including duplicates. It starts at the lower bound of the key range and moves upwards\n   (monotonically increasing in the order of keys).\n   \n   \"nextunique\": The cursor shows all records, excluding duplicates. If multiple records exist with the same key,\n   only the first one iterated is retrieved. It starts at the lower bound of the key range and moves upwards.\n   \n   \"prev\": The cursor shows all records, including duplicates. It starts at the upper bound of the key range and moves\n   downwards (monotonically decreasing in the order of keys).\n   \n   \"prevunique\": The cursor shows all records, excluding duplicates. If multiple records exist with the same key,\n   only the first one iterated is retrieved. It starts at the upper bound of the key range and moves downwards."],"~$bound",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",547,"^2T",7,"^2U",547,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]]]]],"^2Z","Creates a new key range with the specified upper and lower bounds. The bounds can be open\n   (that is, the bounds exclude the endpoint values) or closed (that is, the bounds include the endpoint values).\n   \n   By default, the bounds are closed.","^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]],"^2W",["^2X",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]]],"^31",["^2X",[null,null,null]]]],"^9","^2F","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]],"^2W",["^2X",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]]],"^31",["^2X",[null,null,null]]],"^2[",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]],"^30",null,"^3>",4,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",4,"^32",false,"^3@","^48"],["^ ","^3>",3,"^32",false,"^3@","^48"],["^ ","^3>",2,"^32",false,"^3@","^48"]],"^2S",547,"^2U",547,"^35",4,"^36",true,"^2W",["^2X",[["^4J","^3[","^5>","^3K"],["^4J","^3[","^5>"],["^4J","^3["]]],"^2Z","Creates a new key range with the specified upper and lower bounds. The bounds can be open\n   (that is, the bounds exclude the endpoint values) or closed (that is, the bounds include the endpoint values).\n   \n   By default, the bounds are closed."],"~$durability",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",633,"^2T",7,"^2U",633,"^2V",17,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Returns the durability hint the transaction was created with"],"^9","^22","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",17,"^2[",["^2X",[["^4P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",633,"^33","^3:","^2U",633,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Returns the durability hint the transaction was created with"],"~$delete-index",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",940,"^2T",7,"^2U",940,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^E","^4;"]]]]],"^2Z","Destroys the index with the specified name in the connected database, used during a version upgrade\n   \n   Note that this method must be called only from a VersionChange transaction mode callback"],"^9","^Y","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^2[",["^2X",[["^E","^4;"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",940,"^33","^3:","^2U",940,"^35",2,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^E","^4;"]]]]],"^2Z","Destroys the index with the specified name in the connected database, used during a version upgrade\n   \n   Note that this method must be called only from a VersionChange transaction mode callback"],"~$result",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",377,"^2T",7,"^2U",377,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["^43"]]]]],"^2Z","Returns the result of the request"],"^9","^19","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["^43"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",377,"^33","^3:","^2U",377,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^43"]]]]],"^2Z","Returns the result of the request"],"~$create-index",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",924,"^2T",7,"^2U",924,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^E","^4;","^3J","~$object-parameters"],["^E","^4;","^3J"]]]]],"^2Z","Creates and returns an implementation of the IDBIndex protocol in the connected database.\n   \n   It creates a new field/column defining a new data point for each database record to contain.\n   \n   Note that this method must be called only from a VersionChange transaction mode callback","^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]],"^2W",["^2X",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]]],"^31",["^2X",[null,null]]]],"^9","^2@","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]],"^2W",["^2X",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]]],"^31",["^2X",[null,null]]],"^2[",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]],"^30",null,"^3>",4,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",4,"^32",false,"^3@","^3:"],["^ ","^3>",3,"^32",false,"^3@","^3:"]],"^2S",924,"^2U",924,"^35",4,"^36",true,"^2W",["^2X",[["^E","^4;","^3J","^5H"],["^E","^4;","^3J"]]],"^2Z","Creates and returns an implementation of the IDBIndex protocol in the connected database.\n   \n   It creates a new field/column defining a new data point for each database record to contain.\n   \n   Note that this method must be called only from a VersionChange transaction mode callback"],"^8",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",683,"^2T",7,"^2U",683,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^3F","^4H"],["^3F"]]]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread,\n   returns the total number of records that match the provided key or IDBKeyRange.\n   \n   If no arguments are provided, it returns the total number of records in the store.","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null]]]],"^9","^1;","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null]]],"^2[",[["^3F","^4H"],["^3F"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",683,"^2U",683,"^35",2,"^36",true,"^2W",["^2X",[["^3F","^4H"],["^3F"]]],"^2Z","Returns an implementation of the IDBRequest protocol, and, in a separate thread,\n   returns the total number of records that match the provided key or IDBKeyRange.\n   \n   If no arguments are provided, it returns the total number of records in the store."],"~$get-all",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",722,"^2T",7,"^2U",722,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]]]],"^2Z","Retrieves all objects that are inside the index or store. Returns an IDBRequest containing\n  the results","^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]]],"^9","^21","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^3=",["^ ","^32",false,"^3>",3,"^35",3,"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^31",["^2X",[null,null,null]]],"^2[",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]],"^30",null,"^3>",3,"^31",["^2X",[null,null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^3:"]],"^2S",722,"^2U",722,"^35",3,"^36",true,"^2W",["^2X",[["^3F","^4H","^8"],["^3F","^4H"],["^3F"]]],"^2Z","Retrieves all objects that are inside the index or store. Returns an IDBRequest containing\n  the results"],"~$unique?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",858,"^2T",7,"^2U",858,"^2V",14,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns a boolean that states whether the index allows duplicate keys"],"^9","~$indexed.db/unique?","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",14,"^2[",["^2X",[["^3P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",858,"^33","^3:","^2U",858,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns a boolean that states whether the index allows duplicate keys"],"~$commit",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",660,"^2T",7,"^2U",660,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Commits the transaction if it is called on an active transaction.\n   \n   Note that commit doesn't normally have to be called — a transaction will automatically\n   commit when all outstanding requests have been satisfied and no new requests have been made."],"^9","^2<","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["^4P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",660,"^33","^3:","^2U",660,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4P"]]]]],"^2Z","Commits the transaction if it is called on an active transaction.\n   \n   Note that commit doesn't normally have to be called — a transaction will automatically\n   commit when all outstanding requests have been satisfied and no new requests have been made."],"^4J",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",511,"^2T",7,"^2U",511,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns the lower bound of the key range"],"^9","^1Z","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^A"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",511,"^33","^3:","^2U",511,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^A"]]]]],"^2Z","Returns the lower bound of the key range"],"~$off",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",481,"^2T",7,"^2U",481,"^2V",10,"^2W",["^2X",["^2Y",["^2X",[["~$event-target","~$type","~$listener"],["^5N","^5O","^5P","^52"]]]]],"^2Z","A simple wrapper around the native removeEventListener function.\n   \n   Removes the event listener and returns the given event target","^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^31",["^2X",[null,null]]]],"^9","^17","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",10,"^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^31",["^2X",[null,null]]],"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^30",null,"^3>",4,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",4,"^32",false,"^3@","^3:"]],"^2S",481,"^2U",481,"^35",4,"^36",true,"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^2Z","A simple wrapper around the native removeEventListener function.\n   \n   Removes the event listener and returns the given event target"],"~$new-version",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",429,"^2T",7,"^2U",429,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["^4:"]]]]],"^2Z","Returns the new version number of the database"],"^9","^1:","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^4:"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",429,"^33","^3:","^2U",429,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^4:"]]]]],"^2Z","Returns the new version number of the database"],"~$get-object-store",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",839,"^2T",7,"^2U",839,"^2V",23,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns the object store the index belongs to"],"^9","^2;","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",23,"^2[",["^2X",[["^3P"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",839,"^33","^4Z","^2U",839,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^3P"]]]]],"^2Z","Returns the object store the index belongs to"],"~$get-request",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",447,"^2T",7,"^2U",447,"^2V",18,"^2W",["^2X",["^2Y",["^2X",[["~$belongs-to-request"]]]]],"^2Z","Return the IDBRequest that `belongs-to-request` belongs to. This is presumably\n   an IDBVersionChangeEvent or IDBVersionChangeEvent implementation"],"^9","^2:","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",18,"^2[",["^2X",[["^5T"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",447,"^33","^3W","^2U",447,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^5T"]]]]],"^2Z","Return the IDBRequest that `belongs-to-request` belongs to. This is presumably\n   an IDBVersionChangeEvent or IDBVersionChangeEvent implementation"],"~$object-store",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",1008,"^2T",7,"^2U",1008,"^2V",19,"^2W",["^2X",["^2Y",["^2X",[["^4P","^3B"],["^3P"]]]]],"^2Z","When called with a transaction and object store name, returns an object store that\n   has already been added to the scope of this transaction.\n   \n   When called with an index, returns the object store the index belongs to","^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^4P","^3B"],["^3P"]],"^2W",["^2X",[["^4P","^3B"],["^3P"]]],"^31",["^2X",[null,null]]]],"^9","^15","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",19,"^3=",["^ ","^32",false,"^3>",2,"^35",2,"^2[",[["^4P","^3B"],["^3P"]],"^2W",["^2X",[["^4P","^3B"],["^3P"]]],"^31",["^2X",[null,null]]],"^2[",[["^4P","^3B"],["^3P"]],"^30",null,"^3>",2,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",2,"^32",false,"^3@","^3:"],["^ ","^3>",1,"^32",false,"^3@","^4Z"]],"^2S",1008,"^2U",1008,"^35",2,"^36",true,"^2W",["^2X",[["^4P","^3B"],["^3P"]]],"^2Z","When called with a transaction and object store name, returns an object store that\n   has already been added to the scope of this transaction.\n   \n   When called with an index, returns the object store the index belongs to"],"~$store?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",867,"^2T",7,"^2U",867,"^2V",13,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBObjectStore protocol"],"^9","^12","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",13,"^2[",["^2X",[["~$x"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",867,"^33","^34","^2U",867,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["~$x"]]]]],"^2Z","Returns true if the given value satisfies the IDBObjectStore protocol"],"~$error",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",367,"^2T",7,"^2U",367,"^2V",12,"^2W",["^2X",["^2Y",["^2X",[["~$has-errors"]]]]],"^2Z","If a type stores an error for failed operations, this function\n   will return it."],"^9","^2=","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",12,"^2[",["^2X",[["^5X"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",367,"^33","^3:","^2U",367,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^5X"]]]]],"^2Z","If a type stores an error for failed operations, this function\n   will return it."],"~$auto-increment?",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",885,"^2T",7,"^2U",885,"^2V",22,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Returns the value of the auto increment flag for this object store.\n   \n   Note that every object store has its own separate auto increment counter"],"^9","^2>","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",22,"^2[",["^2X",[["^E"]]],"^30",null,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^2S",885,"^33","^3:","^2U",885,"^35",1,"^36",true,"^2W",["^2X",["^2Y",["^2X",[["^E"]]]]],"^2Z","Returns the value of the auto increment flag for this object store.\n   \n   Note that every object store has its own separate auto increment counter"],"~$on",["^ ","^2P",null,"^2Q",["^ ","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2S",467,"^2T",7,"^2U",467,"^2V",9,"^2W",["^2X",["^2Y",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]]]],"^2Z","A simple wrapper around the native addEventListener function.\n   \n   Adds the event listener and returns the given event target","^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^31",["^2X",[null,null]]]],"^9","^[","^2R","/Users/brian/projects/indexed.db/src/indexed/db.cljs","^2V",9,"^3=",["^ ","^32",false,"^3>",4,"^35",4,"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^31",["^2X",[null,null]]],"^2[",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]],"^30",null,"^3>",4,"^31",["^2X",[null,null]],"^2T",1,"^32",false,"^3?",[["^ ","^3>",3,"^32",false,"^3@","^3:"],["^ ","^3>",4,"^32",false,"^3@","^3:"]],"^2S",467,"^2U",467,"^35",4,"^36",true,"^2W",["^2X",[["^5N","^5O","^5P"],["^5N","^5O","^5P","^52"]]],"^2Z","A simple wrapper around the native addEventListener function.\n   \n   Adds the event listener and returns the given event target"]],"~:cljs.spec/registry-ref",[["^S",["^2X",["~$cljs.spec.alpha/fspec","~:args",["^2X",["~$cljs.spec.alpha/alt","~:unary",["^2X",["~$cljs.spec.alpha/cat","~:store-or-index","~:indexed.db.spec/readable-store"]],"~:binary",["^2X",["^64","^65","^66","~:query","~:indexed.db.spec/query"]],"~:trinary",["^2X",["^64","^65","^66","^68","^69","~:direction","~:indexed.db.spec/direction"]]]],"~:ret","~:indexed.db.spec/request"]]],["^T",["^2X",["^60","^61",["^2X",["^64","~:index","~:indexed.db.spec/index"]],"^6=","~$cljs.core/boolean?"]]],["^U",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","~:cursor","~:indexed.db.spec/cursor"]],"^67",["^2X",["^64","^6B","^6C","~:k","~$cljs.core/any?"]]]],"^6=","~$cljs.core/nil?"]]],["^V",["^2X",["^60","^61",["^2X",["^64","^6?","^6@"]],"^6=","^6A"]]],["^W",["^2X",["^60","^61",["^2X",["^64","~:store","~:indexed.db.spec/store"]],"^6=","^6>"]]],["^X",["^2X",["^60","^61",["^2X",["^64","~:version-change-event","~:indexed.db.spec/version-change-event"]],"^6=","~:indexed.db.spec/version"]]],["^Y",["^2X",["^60","^61",["^2X",["^64","^6F","^6G","~:index-name","~$cljs.core/string?"]],"^6=","^6E"]]],["^Z",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^65","^66"]],"^67",["^2X",["^64","^65","^66","^68","^69"]],"^6:",["^2X",["^64","^65","^66","^68","^69","^6;","^6<"]]]],"^6=","^6>"]]],["^[",["^2X",["^60","^61",["^2X",["^62","^6:",["^2X",["^64","~:event-target","~:indexed.db.spec/event-target","~:type","^6L","~:listener","~$cljs.core/fn?"]],"~:quaternary",["^2X",["^64","^6M","^6N","^6O","^6L","^6P","^6Q","~:options",["^2X",["~$cljs.spec.alpha/or","^6S","~$cljs.core/map?","~:use-capture?","^6A"]]]]]],"^6=","^6N"]]],["^10",["^2X",["^60","^61",["^2X",["^64","~:js-idb-transaction","~:indexed.db.spec/js-transaction"]],"^6=","~:indexed.db.spec/transaction"]]],["^11",["^2X",["^60","^61",["^2X",["^62","~:database-with-options",["^2X",["^64","~:db","~:indexed.db.spec/database","^9","~:indexed.db.spec/name","^6S","~:indexed.db.spec/store-options"]],"~:database-no-options",["^2X",["^64","^6[","^70","^9","^71"]],"~:factory",["^2X",["^64","~:js-idb-store","~:indexed.db.spec/js-store"]]]],"^6=","^6G"]]],["^12",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^13",["^2X",["^60","^61",["^2X",["^64","^6[","^70","^9","^71"]],"^6=","^70"]]],["^14",["^2X",["^60","^61",["^2X",["^64","~:key-range","~:indexed.db.spec/key-range"]],"^6=","^6A"]]],["^15",["^2X",["^60","^61",["^2X",["^62","~:transaction",["^2X",["^64","~:txn","^6Y","^9","^71"]],"^6?",["^2X",["^64","^6?","^6@"]]]],"^6=","^6G"]]],["^16",["^2X",["^60","^61",["^2X",["^64","~:value","^6D"]],"^6=","^78"]]],["^17",["^2X",["^60","^61",["^2X",["^62","^6:",["^2X",["^64","^6M","^6N","^6O","^6L","^6P","^6Q"]],"^6R",["^2X",["^64","^6M","^6N","^6O","^6L","^6P","^6Q","^6S",["^2X",["^6T","^6S","^6U","^6V","^6A"]]]]]],"^6=","^6N"]]],["^18",["^2X",["^60","^61",["^2X",["^64","~:js-cursor-with-value","~:indexed.db.spec/js-cursor-with-value"]],"^6=","~:indexed.db.spec/cursor-with-value"]]],["^19",["^2X",["^60","^61",["^2X",["^64","~:db-request","^6>"]],"^6=","^6D"]]],["^1:",["^2X",["^60","^61",["^2X",["^64","^6H","^6I"]],"^6=","^6J"]]],["^1;",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^65","^66"]],"^67",["^2X",["^64","^65","^66","^68","^69"]]]],"^6=","^6>"]]],["^1<",["^2X",["^60","^61",["^2X",["^64","^7?","^6>"]],"^6=","~:indexed.db.spec/ready-state"]]],["^1=",["^2X",["^60","^61",["^2X",["^64","~:js-idb","~:indexed.db.spec/js-idb"]],"^6=","^70"]]],["^1>",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^1?",["^2X",["^60","^61",["^2X",["^64","^65","^66","~:k","^69"]],"^6=","^6>"]]],["^1@",["^2X",["^60","^61",["^2X",["^64","^6F","^6G","^6K","^6L"]],"^6=","^6@"]]],["^1A",["^2X",["^60","^61",["^2X",["^64","^6?","^6@"]],"^6=","^6L"]]],["^1B",["^2X",["^60","^61",["^2X",["^64","^77","^78","~:k","^6D"]],"^6=","^6A"]]],["^1C",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","~:fn-1","~:indexed.db.spec/databases-callback"]],"^67",["^2X",["^64","^74","~:indexed.db.spec/factory","^7C","^7D"]]]],"^6=","^7E"]]],["^1D",["^2X",["^60","^61",["^2X",["^62","^67",["^2X",["^64","~:a","^6D","~:b","^6D"]],"^6:",["^2X",["^64","^74","^7E","~:a","^6D","~:b","^6D"]]]],"^6=","^6A"]]],["^1E",["^2X",["^60","^61",["^2X",["^62","^67",["^2X",["^64","^6[","^70","~:store-names","~:indexed.db.spec/object-store-names"]],"^6:",["^2X",["^64","^6[","^70","^7F","^7G","~:mode","~:indexed.db.spec/mode"]],"^6R",["^2X",["^64","^6[","^70","^7F","^7G","^7H","^7I","^6S","~:indexed.db.spec/transaction-options"]]]],"^6=","^6Y"]]],["^1F",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^9","^71"]],"^67",["^2X",["^64","^9","^71","~:version","^6J"]],"^6:",["^2X",["^64","^74","^7E","^9","^71","^7K","^6J"]]]],"^6=","~:indexed.db.spec/open-db-request"]]],["^1G",["^2X",["^60","^61",["^2X",["^64","^6[","^70"]],"^6=","^6J"]]],["^1H",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^65","^66"]],"^67",["^2X",["^64","^65","^66","^68","^69"]],"^6:",["^2X",["^64","^65","^66","^68","^69","~:count","~$cljs.core/pos-int?"]]]],"^6=","^6>"]]],["^1I",["^2X",["^60","^61",["^2X",["^64","^6B","^6C","^7;","^6D"]],"^6=","^6>"]]],["^1J",["^2X",["^60","^61",["^2X",["^64","^77","^78"]],"^6=","^6A"]]],["^1K",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^1L",["^2X",["^60","^61",["^2X",["^64","^65","^66"]],"^6=","~:indexed.db.spec/key-path"]]],["^1M",["^2X",["^60","^61",["^2X",["^64","^77","^78"]],"^6=","^6D"]]],["^1N",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^1O",["^2X",["^60","^61",["^2X",["^62","^6F",["^2X",["^64","^6F","^6G","~:k","^6D"]],"^6B",["^2X",["^64","^6B","^6C"]]]],"^6=","^6>"]]],["^1P",["^2X",["^60","^61",["^2X",["^64","^6B","^6C","^7M","^7N"]],"^6=","^6E"]]],["^1Q",["^2X",["^60","^61",["^2X",["^64","^6B","^6C"]],"^6=","^6<"]]],["^1R",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^1S",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^9","^71"]],"^67",["^2X",["^64","^74","^7E","^9","^71"]]]],"^6=","^7L"]]],["^1T",["^2X",["^60","^61",["^2X",["^62","^67",["^2X",["^64","^6F","^6G","^7;","^6D"]],"^6:",["^2X",["^64","^6F","^6G","^7;","^6D","~:k","^6D"]]]],"^6=","^6>"]]],["^1U",["^2X",["^60","^61",["^2X",["^64","^6B","^6C"]],"^6=","^6D"]]],["^1V",["^2X",["^60","^61",["^2X",["^64","^6[","^70"]],"^6=","^6D"]]],["^1W",["^2X",["^60","^61",["^2X",["^64","^7:","^6Y"]],"^6=","^6E"]]],["^1X",["^2X",["^60","^61",["^2X",["^64","^65","^66","~:k","^69"]],"^6=","^6>"]]],["^1Y",["^2X",["^60","^61",["^2X",["^64","~:indexed.db/belongs-to-database","~:indexed.db.spec/belongs-to-database"]],"^6=","^70"]]],["^1Z",["^2X",["^60","^61",["^2X",["^64","^77","^78"]],"^6=","^6D"]]],["^1[",["^2X",["^60","^61",["^2X",["^64"]],"^6=","^7E"]]],["^20",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^21",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^65","^66"]],"^67",["^2X",["^64","^65","^66","^68","^69"]],"^6:",["^2X",["^64","^65","^66","^68","^69","^7M","^7N"]]]],"^6=","^6>"]]],["^22",["^2X",["^60","^61",["^2X",["^64","^7:","^6Y"]],"^6=","~:indexed.db.spec/durability"]]],["^23",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^24",["^2X",["^60","^61",["^2X",["^64","^7P","^7Q"]],"^6=","^70"]]],["^25",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^26",["^2X",["^60","^61",["^2X",["^64","~:js-request","~:indexed.db.spec/js-request"]],"^6=","^6>"]]],["^27",["^2X",["^60","^61",["^2X",["^64","~:x",["^2X",["^6T","^79","^6Y","~:database","^70"]]]],"^6=","^7G"]]],["^28",["^2X",["^60","^61",["^2X",["^64","^6B","^6C"]],"^6=","^6D"]]],["^29",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","~:lower","^6D"]],"^67",["^2X",["^64","^7V","^6D","~:open?","^6A"]]]],"^6=","^78"]]],["^2:",["^2X",["^60","^61",["^2X",["^64","~:indexed.db/belongs-to-request","~:indexed.db.spec/belongs-to-request"]],"^6=","^6>"]]],["^2;",["^2X",["^60","^61",["^2X",["^64","^6?","^6@"]],"^6=","^6G"]]],["^2<",["^2X",["^60","^61",["^2X",["^64","^7:","^6Y"]],"^6=","^6E"]]],["^2=",["^2X",["^60","^61",["^2X",["^64","~:has-errors","~:indexed.db.spec/has-errors"]],"^6=",["^2X",["~$cljs.spec.alpha/nilable","~:indexed.db.spec/dom-exception"]]]]],["^2>",["^2X",["^60","^61",["^2X",["^64","^6F","^6G"]],"^6=","^6A"]]],["^2?",["^2X",["^60","^61",["^2X",["^64","^6B","^6C","~:k","^6D","~:primary-key","^6D"]],"^6=","^6E"]]],["^2@",["^2X",["^60","^61",["^2X",["^62","^6:",["^2X",["^64","^6F","^6G","^6K","^6L","~:key-path","^7O"]],"^6R",["^2X",["^64","^6F","^6G","^6K","^6L","^83","^7O","~:object-parameters","~:indexed.db.spec/index-options"]]]],"^6=","^6@"]]],["^2A",["^2X",["^60","^61",["^2X",["^62","^63",["^2X",["^64","^7V","^6D"]],"^67",["^2X",["^64","^7V","^6D","^7W","^6A"]]]],"^6=","^78"]]],["^2B",["^2X",["^60","^61",["^2X",["^62","^67",["^2X",["^64","^6F","^6G","~:item","^6D"]],"^6:",["^2X",["^64","^6F","^6G","^86","^6D","~:k","^6D"]]]],"^6=","^6>"]]],["^2C",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^2D",["^2X",["^60","^61",["^2X",["^64","~:cursor-with-value","^7>"]],"^6=","^6D"]]],["^2E",["^2X",["^60","^61",["^2X",["^64","~:x","^6D"]],"^6=","^6A"]]],["^2F",["^2X",["^60","^61",["^2X",["^62","^67",["^2X",["^64","^7V","^6D","~:upper","^6D"]],"^6:",["^2X",["^64","^7V","^6D","^88","^6D","~:lower-open?","^6A"]],"^6R",["^2X",["^64","^7V","^6D","^88","^6D","^89","^6A","~:upper-open?","^6A"]]]],"^6=","^78"]]],["^2G",["^2X",["^60","^61",["^2X",["^64","~:js-cursor","~:indexed.db.spec/js-cursor"]],"^6=","^6C"]]],["^2H",["^2X",["^60","^61",["^2X",["^64","~:belongs-to-txn","~:indexed.db.spec/belongs-to-transaction"]],"^6=",["^2X",["^80","^6Y"]]]]],["^2I",["^2X",["^60","^61",["^2X",["^64","^6F","^6G"]],"^6=",["^2X",["~$cljs.spec.alpha/coll-of","^6L"]]]]],["^2J",["^2X",["^60","^61",["^2X",["^64","~:js-event","~:indexed.db.spec/js-version-change-event"]],"^6=","^6I"]]],["^2K",["^2X",["^60","^61",["^2X",["^64","^7:","^6Y"]],"^6=","^7I"]]],["^2L",["^2X",["^60","^61",["^2X",["^64","~:x",["^2X",["^6T","^6B","^6C","~:request","^6>"]]]],"^6=",["^2X",["^80",["^2X",["^6T","^6?","^6@","^6F","^6G"]]]]]]]],"~:require-macros",["^ ","~$s","^M","^M","^M"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["^S","^61","^7R","^7[","^67","^7J","^T","^6X","^6A","^U","^70","^7N","^77","^6=","^7>","^88","^V","^8;","^8B","^W","^X","^62","^Y","^Z","^7E","^[","^10","^11","^12","^13","^14","^6?","^6F","^15","~:else","^16","^17","^18","^6H","^19","^8>","^1:","^6[","^8?","^1;","^64","^7F","~:cljs.spec.alpha/kind-form","^1<","^8@","^1=","^1>","^9","^1?","^1@","^6L","^6T","^7;","^86","^85","^7O","^8=","^7H","^7:","^1A","^66","^1B","^60","^7=","^1C","^6M","^1D","^1E","^6J","^6B","^80","~$string?","^6O","^7L","^1F","^1G","^65","^79","^1H","^6K","^7Y","^6U","^76","^7@","~:cljs.spec.alpha/cpred","^1I","^1J","^1K","^1L","^1M","^7Z","^1N","^1O","^1P","^1Q","^1R","^1S","^1T","~:k","^6Q","^1U","^7?","^69","^1V","^1W","^6P","^1X","^89","^7T","^6>","^74","^1Y","^7X","^1Z","^7G","^1[","^6V","^6W","^6@","^20","^21","^7A","^6<","^22","^8<","^78","^23","^8A","^72","^7W","^7V","^7<","^7M","^24","^25","^6E","^26","^27","~:b","^6:","^28","^7U","^73","^29","^2:","^84","^6Z","^2;","^63","^7P","^87","^6G","^6N","^75","^6S","~:x","^81","^7I","^6I","^7Q","^2<","^6C","^2=","^7K","^2>","^68","^2?","^7D","^71","^83","^2@","^2A","^8:","^2B","^82","^2C","~:cljs.spec.alpha/conform-all","^2D","^7B","^2E","^6;","^6R","^2F","~:always","^2G","^2H","^2I","^6D","~:a","^7C","^6Y","^7S","^2J","~:cljs.spec.alpha/describe","^2K","^2L"]],"~:order",["^25","^60","^61","^64","~:x","^6D","^6=","^6A","^1[","^7E","^1F","^62","^63","^9","^71","^67","^7K","^6J","^6:","^74","^7L","^1S","^1D","~:a","~:b","^1C","^7C","^7D","^1>","^24","^7P","^7Q","^70","^1Y","^1=","^7A","^7B","^1V","^6[","^13","^8K","^27","^6T","^79","^6Y","^7U","^7G","^1G","^1E","^7F","^7H","^7I","^6R","^6S","^7J","^2C","^2G","^8;","^8<","^6C","^1Q","^6B","^6<","^28","^1U","^1P","^7M","^7N","^6E","^U","~:knull]